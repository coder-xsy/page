{"version":3,"sources":["logo.png","App.js","reportWebVitals.js","index.js"],"names":["Header","Content","Footer","Search","App","state","query","handleParse","value","queryString","split","qs","parse","console","log","setState","this","className","theme","mode","defaultSelectedKeys","style","lineHeight","Item","padding","span","placeholder","enterButton","size","onSearch","background","minHeight","marginTop","src","textAlign","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4VAAe,I,OCOPA,E,IAAAA,OAAQC,E,IAAAA,QAASC,E,IAAAA,OACjBC,E,IAAAA,OAkDOC,E,4MAhDbC,MAAQ,CACNC,MAAO,I,EAGTC,YAAc,SAACC,GACb,IAAMC,EAAcD,EAAME,MAAM,KAAK,IAAM,GACrCJ,EAAQK,IAAGC,MAAMH,GACvBI,QAAQC,IAAIR,GACZ,EAAKS,SAAS,CACZT,W,4CAIJ,WAAU,IACDA,EAASU,KAAKX,MAAdC,MACP,OACE,oBAAQW,UAAU,SAAlB,UACE,cAACjB,EAAD,UACE,mBACEkB,MAAM,OACNC,KAAK,aACLC,oBAAqB,CAAC,KACtBC,MAAO,CAAEC,WAAY,QAJvB,SAME,kBAAMC,KAAN,+BAAe,SAGnB,eAACtB,EAAD,CAASoB,MAAO,CAAEG,QAAS,aAA3B,UACE,4BACE,mBAAKC,KAAM,GAAX,SACE,cAACtB,EAAD,CACEuB,YAAY,oBACZC,YAAY,QACZC,KAAK,QACLC,SAAUb,KAAKT,kBAIrB,qBAAKc,MAAO,CAAES,WAAY,OAAQN,QAAS,GAAIO,UAAW,IAAKC,UAAW,QAA1E,SACE,cAAC,IAAD,CAAWC,IAAK3B,SAGpB,cAACJ,EAAD,CAAQmB,MAAO,CAAEa,UAAW,UAA5B,2D,GA3CUC,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7aa7c10c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a99988bd.png\";","\nimport React, { Component } from 'react';\nimport { Layout, Menu, Input, Row, Col } from 'antd';\nimport qs from 'qs'\nimport ReactJson from 'react-json-view'\nimport './App.css';\nimport Logo from './logo.png';\nconst { Header, Content, Footer } = Layout;\nconst { Search } = Input\nclass App extends Component {\n  state = {\n    query: {}\n  }\n\n  handleParse = (value) => {\n    const queryString = value.split('?')[1] || '';\n    const query = qs.parse(queryString);\n    console.log(query);\n    this.setState({\n      query,\n    })\n  }\n\n  render() {\n    const {query} = this.state;\n    return (\n      <Layout className=\"layout\">\n        <Header>\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={['2']}\n            style={{ lineHeight: '64px' }}\n          >\n            <Menu.Item key=\"1\">query解析</Menu.Item>\n          </Menu>\n        </Header>\n        <Content style={{ padding: '40px 50px' }}>\n          <Row>\n            <Col span={12}>\n              <Search\n                placeholder=\"input search text\"\n                enterButton=\"parse\"\n                size=\"large\"\n                onSearch={this.handleParse}\n              />\n            </Col>\n          </Row>\n          <div style={{ background: '#fff', padding: 24, minHeight: 280, marginTop: '40px' }}>\n            <ReactJson src={query} />\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n      </Layout>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}